print("Injected")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

-- Create the main GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AdminButtonGui"
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 250)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -125)
MainFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1) -- Dark gray
MainFrame.BorderSizePixel = 0
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Parent = ScreenGui

local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, 0, 0, 30)
Header.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Slightly lighter gray
Header.BorderSizePixel = 0
Header.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Text = "Alban's Hub"
Title.Size = UDim2.new(1, -40, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.Font = Enum.Font.SourceSans
Title.TextSize = 20
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.BackgroundTransparency = 1
Title.Parent = Header

local CloseButton = Instance.new("TextButton")
CloseButton.Text = "X"
CloseButton.Size = UDim2.new(0, 30, 1, 0)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextSize = 20
CloseButton.TextColor3 = Color3.new(1, 0, 0)
CloseButton.BackgroundTransparency = 1
CloseButton.Parent = Header

local ToggleFrame = Instance.new("Frame")
ToggleFrame.Size = UDim2.new(1, -20, 0, 50)
ToggleFrame.Position = UDim2.new(0, 10, 0, 50)
ToggleFrame.BackgroundTransparency = 1
ToggleFrame.Parent = MainFrame

local ToggleLabel = Instance.new("TextLabel")
ToggleLabel.Text = "Gifts Farm"
ToggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
ToggleLabel.Font = Enum.Font.SourceSans
ToggleLabel.TextSize = 20
ToggleLabel.TextColor3 = Color3.new(1, 1, 1)
ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
ToggleLabel.BackgroundTransparency = 1
ToggleLabel.Parent = ToggleFrame

local ToggleButton = Instance.new("TextButton")
ToggleButton.Text = "OFF"
ToggleButton.Size = UDim2.new(0.3, 0, 1, 0)
ToggleButton.Position = UDim2.new(0.7, 0, 0, 0)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 20
ToggleButton.BackgroundColor3 = Color3.new(1, 0, 0) -- Red
ToggleButton.TextColor3 = Color3.new(1, 1, 1)
ToggleButton.Parent = ToggleFrame

local SpecialButton = Instance.new("TextButton")
SpecialButton.Text = "TP to Special"
SpecialButton.Size = UDim2.new(1, -20, 0, 40)
SpecialButton.Position = UDim2.new(0, 10, 0, 120)
SpecialButton.Font = Enum.Font.SourceSansBold
SpecialButton.TextSize = 20
SpecialButton.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3) -- Gray
SpecialButton.TextColor3 = Color3.new(1, 1, 1)
SpecialButton.Parent = MainFrame

-- Variables to manage teleportation
local isActive = false
local teleporting = false
local dragging = false
local dragStart
local startPosition
local isMinimized = false

-- Function to teleport player to all gifts
local function teleportToGifts()
    local giftsFolder = workspace:FindFirstChild("Christmas") and workspace.Christmas:FindFirstChild("Gifts")
    if not giftsFolder or not giftsFolder:IsA("Folder") then
        warn("Gifts folder not found in workspace.Christmas")
        return
    end

    for _, gift in ipairs(giftsFolder:GetChildren()) do
        if not isActive then break end -- Stop teleporting if deactivated
        if gift:IsA("BasePart") then
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = gift.CFrame + Vector3.new(0, 5, 0) -- Teleport above the gift
                wait(1) -- Wait 1 second before teleporting to the next gift
            end
        end
    end
    teleporting = false
end

-- Teleport to a special model
local function teleportToSpecial()
    local specialsFolder = workspace:FindFirstChild("Christmas") and workspace.Christmas:FindFirstChild("Specials")
    if not specialsFolder or not specialsFolder:IsA("Folder") then
        warn("Specials folder not found in workspace.Christmas")
        return
    end

    local validNames = {"SkinBox1", "SkinBox2", "SkinBox3", "Sack"}
    for _, item in ipairs(specialsFolder:GetChildren()) do
        if item:IsA("Model") and table.find(validNames, item.Name) then
            local primaryPart = item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart")
            if primaryPart then
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    character.HumanoidRootPart.CFrame = primaryPart.CFrame + Vector3.new(0, 5, 0) -- Teleport above the model
                    return
                end
            else
                warn("No primary part found for model: " .. item.Name)
            end
        end
    end

    warn("No valid special models found (SkinBox1, SkinBox2, SkinBox3, Sack).")
end

-- Toggle button click event
ToggleButton.MouseButton1Click:Connect(function()
    isActive = not isActive
    if isActive then
        ToggleButton.Text = "ON"
        ToggleButton.BackgroundColor3 = Color3.new(0, 1, 0) -- Green
        teleporting = true
        teleportToGifts()
    else
        ToggleButton.Text = "OFF"
        ToggleButton.BackgroundColor3 = Color3.new(1, 0, 0) -- Red
        teleporting = false
    end
end)

-- Special button click event
SpecialButton.MouseButton1Click:Connect(function()
    teleportToSpecial()
end)

-- Close button functionality
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Minimize and reopen with the right Ctrl key
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.RightControl then
        isMinimized = not isMinimized
        MainFrame.Visible = not isMinimized
    end
end)

-- Drag functionality
Header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPosition = MainFrame.Position
    end
end)

Header.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPosition.X.Scale,
            startPosition.X.Offset + delta.X,
            startPosition.Y.Scale,
            startPosition.Y.Offset + delta.Y
        )
    end
end)

Header.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)
