local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local playerWindow, miscWindow

-- Function to create a draggable window
local function createWindow(name, color, position, size)
    local screenGui = player:FindFirstChild("PlayerGui"):FindFirstChild("ScreenGui")
    if not screenGui then
        screenGui = Instance.new("ScreenGui")
        screenGui.Name = "ScreenGui"
        screenGui.Parent = player:WaitForChild("PlayerGui") -- Ensure PlayerGui is loaded
    end

    local window = Instance.new("Frame")
    window.Name = name
    window.Size = size
    window.Position = position
    window.BackgroundColor3 = color
    window.BorderSizePixel = 1
    window.Visible = true
    window.Parent = screenGui

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    title.Text = name
    title.TextScaled = true
    title.TextColor3 = Color3.new(1, 1, 1)
    title.Parent = window

    -- Dragging functionality
    local dragging = false
    local dragStart, startPos
    title.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = window.Position
        end
    end)

    title.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            window.Position = startPos + UDim2.new(0, delta.X, 0, delta.Y)
        end
    end)

    title.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    return window
end

-- Function to create sliders in the Player window
local function createSlider(window, labelText, minValue, maxValue, defaultValue, position, onValueChanged)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 50)
    frame.Position = position
    frame.BackgroundTransparency = 1
    frame.Parent = window

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.5, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = labelText .. ": " .. defaultValue
    label.TextColor3 = Color3.new(1, 1, 1)
    label.BackgroundTransparency = 1
    label.TextScaled = true
    label.Parent = frame

    local slider = Instance.new("TextButton")
    slider.Size = UDim2.new(0.5, -10, 0.5, 0)
    slider.Position = UDim2.new(0.5, 5, 0.25, 0)
    slider.Text = "Drag"
    slider.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
    slider.Parent = frame

    local dragging = false
    slider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    slider.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouseX = input.Position.X
            local sliderFrame = frame.AbsoluteSize.X
            local sliderStart = frame.AbsolutePosition.X
            local percentage = math.clamp((mouseX - sliderStart) / sliderFrame, 0, 1)
            local value = math.floor(minValue + percentage * (maxValue - minValue))
            label.Text = labelText .. ": " .. value
            onValueChanged(value)
        end
    end)

    slider.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

-- Function to toggle window visibility
local function toggleWindows()
    if playerWindow and miscWindow then
        local visible = playerWindow.Visible
        playerWindow.Visible = not visible
        miscWindow.Visible = not visible
    else
        -- Create Player Window
        playerWindow = createWindow("Player", Color3.fromRGB(100, 150, 255), UDim2.new(0.1, 0, 0.1, 0), UDim2.new(0, 300, 0, 200))
        
        -- Add Walk Speed Slider
        createSlider(playerWindow, "Walk Speed", 16, 100, 16, UDim2.new(0, 0, 0.3, 0), function(value)
            if character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = value
            end
        end)
        
        -- Add Jump Power Slider
        createSlider(playerWindow, "Jump Power", 50, 200, 50, UDim2.new(0, 0, 0.6, 0), function(value)
            if character:FindFirstChild("Humanoid") then
                local humanoid = character.Humanoid
                humanoid.UseJumpPower = true -- Ensure JumpPower is used instead of JumpHeight
                humanoid.JumpPower = value -- Update JumpPower
            end
        end)

        -- Create Misc Window
        miscWindow = createWindow("Misc", Color3.fromRGB(255, 100, 150), UDim2.new(0.3, 0, 0.3, 0), UDim2.new(0, 300, 0, 200))
    end
end

-- Function to delete (destroy) the windows
local function deleteWindows()
    if playerWindow then
        playerWindow:Destroy()
        playerWindow = nil
    end
    if miscWindow then
        miscWindow:Destroy()
        miscWindow = nil
    end
end

-- Input handling
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    -- Toggle visibility with RightControl
    if input.KeyCode == Enum.KeyCode.RightControl then
        toggleWindows()
    end

    -- Delete windows with V key
    if input.KeyCode == Enum.KeyCode.V then
        deleteWindows()
    end
end)
